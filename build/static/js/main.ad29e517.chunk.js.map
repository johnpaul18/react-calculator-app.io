{"version":3,"sources":["Components/Container.style.js","Components/Container.js","Components/Calculator.js","Components/Calculator.style.js","Components/Header.style.js","Components/ThemeControl.js","Components/ThemeControl.style.js","Components/ThemeButton.style.js","Components/ThemeButton.js","Components/Screen.style.js","Components/Screen.js","Components/Keypad.style.js","Components/Button.style.js","Components/Button.js","Components/GlobalStyle.style.js","Components/Attriblutes.js","App.js","reportWebVitals.js","index.js"],"names":["component","backgroundColors","StyledContainer","className","children","styled","props","t","StyledCalculator","colors","StyledHeader","div","StyledThemeControl","style","margin","themes","StyledThemeButton","changeTheme","onClick","StyledScreen","result","StyledKeypad","shadowColors","StyledButton","name","area","length","t1","t2","click","GlobalStyle","createGlobalStyle","Attributes","href","target","rel","App","useState","theme","setTheme","operation","screenValue","addend","calculatorValues","setCalculatorValues","inputValue","value","test","currentValue","includes","setOperation","currentTheme","sv","slice","addend1","addend2","parseFloat","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad29e517.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst backgroundColors = [\r\n  \"hsl(222, 26%, 31%)\",\r\n  \"hsl(0, 0%, 90%)\",\r\n  \"hsl(268, 75%, 9%)\",\r\n];\r\n\r\nexport const StyledContainer = (component) => styled(component)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  background-color: ${(props) => backgroundColors[props.t]};\r\n  transition: 0.5s;\r\n`;\r\n","import { StyledContainer } from \"./Container.style\";\r\n\r\nconst Container = ({ className, children }) => {\r\n  return <div className={className}>{children}</div>;\r\n};\r\n\r\nexport default StyledContainer(Container);\r\n","import { StyledCalculator } from \"./Calculator.style\";\r\n\r\nconst Calculator = ({ className, children }) => {\r\n  return <div className={className}>{children}</div>;\r\n};\r\n\r\nexport default StyledCalculator(Calculator);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledCalculator = (component) => styled(component)`\r\n  width: 400px;\r\n  padding: 10px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nlet colors = [\"#fff\", \"hsl(60, 10%, 19%)\", \"hsl(52, 100%, 62%)\"];\r\n\r\nexport const StyledHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: ${(props) => colors[props.t]};\r\n  font-family: \"Spartan\", sans-serif;\r\n  font-weight: 700;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n","import { StyledThemeControl } from \"./ThemeControl.style\";\r\n\r\nconst ThemeControl = ({ className, children }) => {\r\n  return (\r\n    <div className={className}>\r\n      <p style={{ margin: \"10px\" }}>THEME</p>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledThemeControl(ThemeControl);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledThemeControl = (component) => styled(component)`\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: \"Spartan\", sans-serif;\r\n  font-weight: 700;\r\n  font-size: 11px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nlet themes = [\"flex-start\", \"center\", \"flex-end\"];\r\nlet backgroundColors = [\r\n  \"hsl(223, 31%, 20%)\",\r\n  \"hsl(0, 5%, 81%)\",\r\n  \"hsl(268, 71%, 12%)\",\r\n];\r\n\r\nexport const StyledThemeButton = (component) => styled(component)`\r\n  width: 50px;\r\n  height: 20px;\r\n  background-color: ${(props) => backgroundColors[props.t]};\r\n  display: flex;\r\n\r\n  justify-content: ${(props) => themes[props.t]};\r\n  align-items: center;\r\n  border-radius: 50px;\r\n  padding: 0 5px;\r\n  position: relative;\r\n  transition: align-items 2s;\r\n\r\n  & div {\r\n    border-radius: 50%;\r\n    height: 13px;\r\n    width: 13px;\r\n\r\n    background-color: hsl(6, 63%, 50%);\r\n  }\r\n\r\n  &::before {\r\n    content: \"123\";\r\n    letter-spacing: 15px;\r\n    position: absolute;\r\n    top: -100%;\r\n    left: 5px;\r\n  }\r\n`;\r\n","import { StyledThemeButton } from \"./ThemeButton.style\";\r\n\r\nconst ThemeButton = ({ className, changeTheme }) => {\r\n  return (\r\n    <div className={className} onClick={changeTheme}>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledThemeButton(ThemeButton);\r\n","import styled from \"styled-components\";\r\n\r\nlet backgroundColors = [\r\n  \"hsl(224, 36%, 15%)\",\r\n  \"hsl(0, 0%, 93%)\",\r\n  \"hsl(268, 71%, 12%)\",\r\n];\r\n\r\nlet colors = [\"#fff\", \"hsl(60, 10%, 19%)\", \"hsl(52, 100%, 62%)\"];\r\n\r\nexport const StyledScreen = (component) => styled(component)`\r\n  font-size: 32px;\r\n  border-radius: 5px;\r\n  background-color: ${(props) => backgroundColors[props.t]};\r\n  color: ${(props) => colors[props.t]};\r\n  font-family: \"Spartan\", sans-serif;\r\n  padding: 10px;\r\n  max-height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  font-weight: 700;\r\n`;\r\n","import { StyledScreen } from \"./Screen.style\";\r\n\r\nconst Screen = ({ className, result }) => {\r\n  return (\r\n    <div className={className}>\r\n      <p>{result}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StyledScreen(Screen);\r\n","import styled from \"styled-components\";\r\n\r\nlet backgroundColors = [\r\n  \"hsl(223, 31%, 20%)\",\r\n  \"hsl(0, 5%, 81%)\",\r\n  \"hsl(268, 71%, 12%)\",\r\n];\r\n\r\nexport const StyledKeypad = styled.div`\r\n  background-color: ${(props) => backgroundColors[props.t]};\r\n  margin-top: 20px;\r\n  border-radius: 5px;\r\n  padding: 15px 10px;\r\n  display: grid;\r\n  justify-content: center;\r\n  grid-template-columns: 20% 20% 20% 20%;\r\n  grid-gap: 15px;\r\n  height: 300px;\r\n  grid-template-areas:\r\n    \"seven eight nine del\"\r\n    \"four five six add\"\r\n    \"one two three sub\"\r\n    \"point zero div mul\"\r\n    \"reset reset equal equal\";\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nlet backgroundColors = [\r\n  [\"hsl(225, 21%, 49%)\", \"hsl(6, 63%, 50%)\", \"hsl(30, 25%, 89%)\"],\r\n  [\"hsl(185, 42%, 37%)\", \"hsl(25, 98%, 40%)\", \"hsl(45, 7%, 89%)\"],\r\n  [\"hsl(281, 89%, 26%)\", \"hsl(176, 100%, 44%)\", \"hsl(268, 47%, 21%)\"],\r\n];\r\n\r\nlet shadowColors = [\r\n  [\"hsl(224, 28%, 35%)\", \"hsl(6, 70%, 34%)\", \"hsl(28, 16%, 65%)\"],\r\n  [\"hsl(185, 58%, 25%)\", \"hsl(25, 99%, 27%)\", \"hsl(35, 11%, 61%)\"],\r\n  [\"hsl(285, 91%, 52%)\", \"hsl(177, 92%, 70%)\", \"hsl(290, 70%, 36%)\"],\r\n];\r\n\r\nlet colors = [\r\n  [\"#fff\", \"#fff\", \"hsl(221, 14%, 31%)\"],\r\n  [\"#fff\", \"#fff\", \"hsl(60, 10%, 19%)\"],\r\n  [\"#fff\", \"hsl(198, 20%, 13%)\", \"hsl(52, 100%, 62%)\"],\r\n];\r\n\r\nexport const StyledButton = (component) => styled(component)`\r\n  content: ${(props) => props.name};\r\n  grid-area: ${(props) => props.area};\r\n  font-size: ${(props) => (props.name.length > 1 ? \"14px\" : \"23px\")};\r\n  font-weight: 700;\r\n  color: ${(props) => colors[props.t1][props.t2]};\r\n  text-align: center;\r\n  background-color: ${(props) => backgroundColors[props.t1][props.t2]};\r\n  box-shadow: 0 3px ${(props) => shadowColors[props.t1][props.t2]};\r\n  border: none;\r\n  outline: none;\r\n  margin: 0;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  transition: 0.5s;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import { StyledButton } from \"./Button.style\";\r\n\r\nconst Button = ({ className, name, click }) => {\r\n  return (\r\n    <button className={className} onClick={() => click(name)}>\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default StyledButton(Button);\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *{\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n`;\r\n","const Attributes = () => {\r\n  return (\r\n    <div className=\"attribution\">\r\n      Challenge by\r\n      <a\r\n        href=\"https://www.frontendmentor.io?ref=challenge\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        Frontend Mentor\r\n      </a>\r\n      . Coded by{\" \"}\r\n      <a href=\"https://www.facebook.com/johnpaul.alimango.5\">\r\n        John Paul C. Alimango\r\n      </a>\r\n      .\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attributes;\r\n","import { useState } from \"react\";\nimport Container from \"./Components/Container\";\nimport Calculator from \"./Components/Calculator\";\nimport { StyledHeader } from \"./Components/Header.style\";\nimport ThemeControl from \"./Components/ThemeControl\";\nimport ThemeButton from \"./Components/ThemeButton\";\nimport Screen from \"./Components/Screen\";\nimport { StyledKeypad as Keypad } from \"./Components/Keypad.style\";\nimport Button from \"./Components/Button\";\nimport { GlobalStyle } from \"./Components/GlobalStyle.style\";\nimport Attributes from \"./Components/Attriblutes\";\n\nfunction App() {\n  const [theme, setTheme] = useState(0);\n  const changeThemeHanler = () => {\n    let currentTheme = theme;\n    if (currentTheme === 2) currentTheme = 0;\n    else ++currentTheme;\n\n    setTheme(currentTheme);\n  };\n\n  const [calculatorValues, setCalculatorValues] = useState({\n    operation: \"\",\n    screenValue: \"0\",\n    addend: \"0\",\n  });\n\n  const inputValue = (value) => {\n    if (/^-?\\d*[.,]?\\d*$/.test(value)) {\n      let currentValue = calculatorValues.screenValue;\n      if (\n        value === \".\" &&\n        (currentValue.includes(\".\") || currentValue === \"-\")\n      ) {\n        return;\n      }\n\n      if (currentValue === \"0\" && value !== \".\") {\n        currentValue = \"\";\n      }\n\n      currentValue = `${currentValue}${value}`;\n      setCalculatorValues({\n        ...calculatorValues,\n        screenValue: currentValue,\n      });\n    }\n  };\n\n  const setOperation = (operation) => {\n    if (operation === \"-\" && calculatorValues.screenValue === \"0\") {\n      inputValue(operation);\n      return;\n    }\n\n    if (calculatorValues.operation) return;\n\n    setCalculatorValues({\n      ...calculatorValues,\n      screenValue: \"0\",\n      addend: calculatorValues.screenValue,\n      operation: operation,\n    });\n  };\n\n  const getResult = () => {\n    if (!calculatorValues.operation) {\n      alert(\"Nothing to solve!\");\n      return;\n    }\n\n    const operation = calculatorValues.operation;\n    const addend1 = calculatorValues.addend;\n    const addend2 = calculatorValues.screenValue;\n\n    let result;\n    switch (operation) {\n      case \"+\":\n        result = parseFloat(addend1) + parseFloat(addend2);\n        break;\n      case \"-\":\n        result = parseFloat(addend1) - parseFloat(addend2);\n        break;\n      case \"/\":\n        result = parseFloat(addend1) / parseFloat(addend2);\n        break;\n      case \"x\":\n        result = parseFloat(addend1) * parseFloat(addend2);\n        break;\n\n      default:\n        alert(\"ERROR!\");\n    }\n\n    setCalculatorValues({\n      operation: \"\",\n      screenValue: `${result}`,\n      addend: addend2,\n    });\n  };\n\n  const reset = () => {\n    setCalculatorValues({\n      operation: \"\",\n      screenValue: \"0\",\n      addend: \"\",\n    });\n  };\n\n  const del = () => {\n    let sv = calculatorValues.screenValue;\n\n    sv = sv.slice(0, sv.length - 1);\n\n    if (!sv.length) {\n      sv = \"0\";\n    }\n\n    setCalculatorValues({\n      ...calculatorValues,\n      screenValue: sv,\n    });\n  };\n  return (\n    <>\n      <Container t={theme}>\n        <GlobalStyle />\n        <Calculator>\n          <StyledHeader t={theme}>\n            <h1>calcu</h1>\n            <ThemeControl>\n              <ThemeButton changeTheme={changeThemeHanler} t={theme} />\n            </ThemeControl>\n          </StyledHeader>\n          <Screen t={theme} result={calculatorValues.screenValue}></Screen>\n          <Keypad t={theme}>\n            <Button\n              t1={theme}\n              t2={2}\n              click={inputValue}\n              area=\"seven\"\n              name=\"7\"\n            />\n            <Button\n              t1={theme}\n              t2={2}\n              click={inputValue}\n              area=\"eight\"\n              name=\"8\"\n            />\n            <Button t1={theme} t2={2} click={inputValue} area=\"nine\" name=\"9\" />\n            <Button t1={theme} t2={0} click={del} area=\"del\" name=\"DEL\" />\n\n            <Button t1={theme} t2={2} click={inputValue} area=\"four\" name=\"4\" />\n            <Button t1={theme} t2={2} click={inputValue} area=\"five\" name=\"5\" />\n            <Button t1={theme} t2={2} click={inputValue} area=\"six\" name=\"6\" />\n            <Button\n              t1={theme}\n              t2={2}\n              click={setOperation}\n              area=\"add\"\n              name=\"+\"\n            />\n\n            <Button t1={theme} t2={2} click={inputValue} area=\"one\" name=\"1\" />\n            <Button t1={theme} t2={2} click={inputValue} area=\"two\" name=\"2\" />\n            <Button\n              t1={theme}\n              t2={2}\n              click={inputValue}\n              area=\"three\"\n              name=\"3\"\n            />\n            <Button\n              t1={theme}\n              t2={2}\n              click={setOperation}\n              area=\"sub\"\n              name=\"-\"\n            />\n\n            <Button\n              t1={theme}\n              t2={2}\n              click={inputValue}\n              area=\"point\"\n              name=\".\"\n            />\n            <Button t1={theme} t2={2} click={inputValue} area=\"zero\" name=\"0\" />\n            <Button\n              t1={theme}\n              t2={2}\n              click={setOperation}\n              area=\"div\"\n              name=\"/\"\n            />\n            <Button\n              t1={theme}\n              t2={2}\n              click={setOperation}\n              area=\"mul\"\n              name=\"x\"\n            />\n\n            <Button t1={theme} t2={0} click={reset} area=\"reset\" name=\"RESET\" />\n\n            <Button t1={theme} t2={1} click={getResult} area=\"equal\" name=\"=\" />\n          </Keypad>\n        </Calculator>\n      </Container>\n      <Attributes />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}